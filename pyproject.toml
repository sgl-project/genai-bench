[project]
name = "genai-bench"
version = "0.0.1"
description = "A powerful benchmark tool designed for comprehensive token-level performance evaluation of large language model (LLM) serving systems."
authors = [{ name = "Chang Su", email = "chang.s.su@oracle.com" }]
requires-python = ">=3.10,<3.13"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Benchmark",
    "Typing :: Typed",
]
dependencies = [
    "locust>=2.37.14,<3.0.0",
    "numpy>=1.26.4",
    "requests>=2.32.3,<3.0.0",
    "transformers>=4.44.2,<5.0.0",
    "click>=8.1.7",
    "pandas>=2.2.2",
    "pydantic>=2.8.2",
    "rich>=13.8.0",
    "openpyxl>=3.1.5,<4.0.0",
    "matplotlib>=3.9.2,<4.0.0",
    "gevent>=24.2.1",
    "oci>=2.150.1",
    "tenacity>=8.2.3,<9.0.0",
    "datasets>=3.1.0",
    "pillow>=11.1.0,<12.0.0",
    "huggingface_hub>=0.20.0",
]

[project.scripts]
genai-bench = "genai_bench.cli.cli:cli"

[project.optional-dependencies]
dev = [
    "ruff>=0.5.6,<0.6.0",
    "mypy>=1.11.1,<2.0.0",
    "isort>=5.13.2,<6.0.0",
    "black>=24.8.0,<25.0.0",
    "pre-commit>=3.8.0,<4.0.0",
    "pytest>=8.3.2,<9.0.0",
    "pytest-cov>=5.0.0,<6.0.0",
]
aws = [
    "boto3>=1.34.0",
    "botocore>=1.34.0",
]
azure = [
    "azure-storage-blob>=12.19.0",
    "azure-identity>=1.15.0",
]
gcp = [
    "google-cloud-storage>=2.13.0",
    "google-auth>=2.25.0",
]
multi-cloud = [
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    "azure-storage-blob>=12.19.0",
    "azure-identity>=1.15.0",
    "google-cloud-storage>=2.13.0",
    "google-auth>=2.25.0",
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.0",
    "mkdocs-material-extensions>=1.3.0",
    "mkdocs-minify-plugin>=0.8.0",
    "mike>=2.0.0",
    "pymdown-extensions>=10.5",
]

[tool.hatch.build.targets.sdist]
include = ["genai_bench"]

[tool.hatch.build.targets.wheel]
include = ["genai_bench"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py310"
line-length = 88
extend-exclude = [
]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    "G",
]
ignore = [
    # star imports
    "F405", "F403",
    # lambda expression assignment
    "E731",
    # Loop control variable not used within loop body
    "B007",
    # logging statement uses f-string
    "G004",
    # Use a single `with` statement with multiple contexts
    "SIM117",
]

[tool.ruff.lint.per-file-ignores]
"examples/*" = ["F841"]
"genai_bench/sampling/__init__.py" = ["F401"]

[tool.black]
line-length = 88
target-version = ['py310']
exclude = '\.venv|build|dist'

[tool.isort]
profile = "black"
sections = [
    "FUTURE",
    "LOCUST",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
known_locust = ["locust"]
